[tox]
skipsdist = True
envlist = lint_all, testenv

[testenv]
passenv =
    # postgres env vars
    POSTGRES_HOST
    POSTGRES_USER
    DBT_ENV_SECRET_POSTGRES_PASS
    POSTGRES_PORT
    POSTGRES_DATABASE
    POSTGRES_SCHEMA
    # redshift
    REDSHIFT_HOST
    REDSHIFT_USER
    DBT_ENV_SECRET_REDSHIFT_PASS
    REDSHIFT_DATABASE
    REDSHIFT_SCHEMA
    REDSHIFT_PORT
    # bigquery
    BIGQUERY_PROJECT
    BIGQUERY_KEYFILE_JSON
    BIGQUERY_SCHEMA
    # snowflake
    SNOWFLAKE_ACCOUNT
    SNOWFLAKE_USER
    DBT_ENV_SECRET_SNOWFLAKE_PASS
    SNOWFLAKE_ROLE
    SNOWFLAKE_DATABASE
    SNOWFLAKE_WAREHOUSE
    SNOWFLAKE_SCHEMA
    # trino
    TRINO_METHOD
    TRINO_USER
    DBT_ENV_SECRET_TRINO_PASS
    TRINO_HOST
    TRINO_PORT
    TRINO_CATALOG
    TRINO_SCHEMA
    TRINO_TIMEZONE
    # databricks
    DATABRICKS_SCHEMA
    DATABRICKS_HOST
    DATABRICKS_HTTP_PATH
    DBT_ENV_SECRET_DATABRICKS_TOKEN
    # spark
    SPARK_HOST
    SPARK_SCHEMA
    SPARK_USER
    SPARK_METHOD
    SPARK_PORT
    # fabric
    FABRIC_DRIVER
    FABRIC_HOST
    FABRIC_PORT
    FABRIC_DATABASE
    FABRIC_SCHEMA
    FABRIC_AUTHENTICATION
    FABRIC_TENANT
    FABRIC_CLIENT
    DBT_ENV_SECRET_FABRIC_CLIENT_SECRET
    # synapse
    SYNAPSE_DRIVER
    SYNAPSE_HOST
    SYNAPSE_PORT
    SYNAPSE_DATABASE
    SYNAPSE_SCHEMA
    SYNAPSE_AUTHENTICATION
    SYNAPSE_TENANT_ID
    SYNAPSE_CLIENT_ID
    DBT_ENV_SECRET_SYNAPSE_CLIENT_SECRET
    # athena
    ATHENA_S3_STAGING_DIR
    ATHENA_S3_DATA_DIR
    ATHENA_S3_DATA_NAMING
    ATHENA_REGION_NAME
    ATHENA_SCHEMA
    ATHENA_DATABASE
    DBT_ENV_SECRET_ATHENA_AWS_ACCESS_KEY_ID
    DBT_ENV_SECRET_ATHENA_AWS_SECRET_ACCESS_KEY


# Postgres integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_postgres]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target postgres

# redshift integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_redshift]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target redshift

# BigQuery integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_bigquery]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target bigquery

# Snowflake integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_snowflake]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target snowflake

# Trino integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_trino]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target trino

# Databricks integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_databricks]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target databricks

# Spark integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_spark]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target spark

# Fabric integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_fabric]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target fabric

# Synapse integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_synapse]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target synapse

# Athena integration tests for centralized dbt testing
# run dbt commands directly, assumes dbt is already installed in environment
[testenv:dbt_integration_athena]
changedir = integration_tests
allowlist_externals = 
    dbt
skip_install = true
commands =
    dbt --version
    dbt debug --target athena
